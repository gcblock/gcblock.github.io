(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{419:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"a-meta元数据系统的设计与实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-meta元数据系统的设计与实现"}},[t._v("#")]),t._v(" 🍉 A-META元数据系统的设计与实现")]),t._v(" "),a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("p",[t._v("元数据被定义为：描述数据的数据，对数据及信息资源的描述性信息。")]),t._v(" "),a("p",[t._v("元数据 是描述其它数据的数据（data about other data），或者说是用于提供某种资源的有关信息的结构数据（structured data）。元数据是描述信息资源或数据等对象的数据，其使用目的在于：识别资源；评价资源；追踪资源在使用过程中的变化；实现简单高效地管理大量网络化数据；实现信息资源的有效发现、查找、一体化组织和对使用资源的有效管理。 元数据的基本特点主要有：")]),t._v(" "),a("p",[t._v("元数据可以构建数据模型，逻辑框架。由于元数据也是数据，因此可以用类似数据的方法在数据库中进行存储和获取，易于传播分享。如果提供数据元的组织同时提供描述数据元的元数据，将会使数据元的使用变得准确而高效。用户在使用数据时可以首先查看其元数据以便能够获取自己所需的信息。")]),t._v(" "),a("p",[t._v("关于元数据的概念在这里不再赘言可自行百度。这里分享下当下优秀的元数据框架 "),a("code",[t._v("RDFS")]),t._v(",相关"),a("code",[t._v("API")]),t._v("有 "),a("code",[t._v("Apache Jena")]),t._v(",和"),a("code",[t._v("RDF")]),t._v("数据处理程序 "),a("code",[t._v("rdfgui")]),t._v(",虽然耶鲁大学及甲骨文公司设计的元数据框架非常优秀，但其不是作为"),a("code",[t._v("WEBAPP")]),t._v("框架来研发的，而是从科研的角度研发的实验性架构，没有结合互联网应用多年成熟的技术研发，因此失去流行性，但也正是因为他是是先驱者才鼓励了后来的开发者参与进来，就像比特币的创生带来了区块链技术一样，功不可没，致敬！")]),t._v(" "),a("p",[t._v("当今元数据的概念已经开始普及，越来越多的软件研发公司开始觉得业务里的增删改查是在重复造轮子，而且耦合到代码里的复杂模型与业务逻辑是紧密耦合的，软件迭代升级和业务修改都是要付出巨大开发成本的。所以A-META元数据系统从网络应用中的痛点出发致力于解决这些问题。")]),t._v(" "),a("h2",{attrs:{id:"_1-a-meta的目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-a-meta的目标"}},[t._v("#")]),t._v(" 1 A-META的目标")]),t._v(" "),a("h3",{attrs:{id:"_1-1-通过后台定义业务模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-通过后台定义业务模型"}},[t._v("#")]),t._v(" 1.1 通过后台定义业务模型")]),t._v(" "),a("blockquote",[a("p",[t._v("经典开发模式定义模型不管是处理一对多关系还是多对多关系都是通过定义数据库关联表实现的。")])]),t._v(" "),a("div",{staticClass:"language-示例 extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("比如用户基本信息和银行卡信息的持久化业务模型（一个用户对应多张银行卡,多个用户可对应1个角色）\n经典开发的处理方式是在数据库中建立2个表，一个用户表，一个银行卡。银行卡中有一个用户字段关联用户表\n\n用户表                           银行卡表\t\t\t\t\t\t角色\t\t\t\t\t\t\t角色用户关联表\n\t--ID\t\t\t\t\t\t\t--ID\t\t\t\t\t--ID\t\t\t\t\t\t\t\t --ID\n    --姓名               \t\t\t   --用户ID\t\t\t\t  --角色名称\t\t\t\t\t\t\t--用户ID\n    \t\t\t\t\t\t\t\t--银行卡号\t\t\t\t\t\t\t\t\t                  --角色ID\n                                      \n用户希望看到的结构（前台如何展现需要后端定制复杂的代码逻辑）\n\n姓名 银行卡\t角色\t\t\t\t\t\t\t\t\t\t\t\t角色                  \n1xx\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   管理员\n    12345\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1XX\n\t54321\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2XX\n           管理员\n2xx\n\t67890\n\t09876\n\t\t  管理员\t\n\n")])])]),a("blockquote",[a("p",[t._v("元数据定义模型处理一对多关系还是多对多关系都是直观的。")])]),t._v(" "),a("div",{staticClass:"language-示例 extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("比如用户基本信息和银行卡信息的持久化业务模型（一个用户对应多张银行卡）\n经典开发的处理方式是在数据库中建立2个表，一个用户表，一个银行卡。银行卡中有一个用户字段关联用户表\n\n用户模型（父模型）                          \t\t\t\t\t角色（模型）\n\t--ID\t\t\t\t\t\t\t\t \t\t\t\t    --角色名称\t\n    --姓名               \t\t\t\t\n    --银行卡模型（子模型）\n           --卡号\n     --角色（子模型）\n           --角色名称\n                                      \n用户希望看到的模型和定义出的模型结构一样\n\n\t\n\n")])])]),a("h3",{attrs:{id:"_1-2-复杂逻辑的实现通过在数据增删过程中执行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-复杂逻辑的实现通过在数据增删过程中执行脚本"}},[t._v("#")]),t._v(" 1.2 复杂逻辑的实现通过在数据增删过程中执行脚本")]),t._v(" "),a("blockquote",[a("p",[t._v("除了对数据的增删改查，常常还需要复杂的计算或与第三方系统进行交互， 这些通过元数据定义还是难以实现的，在未来某一天随着人工智能的发展这些也都是可以实现的，机器可以自己写代码始于对现实世界的结构的理解和对模型的处理方法。")]),t._v(" "),a("p",[t._v("以上都是题外话哈，A-META实现兼容复杂的业务逻辑是通过在模型增删改查传的过程中执行脚本代码实现的。")]),t._v(" "),a("p",[t._v("1、有以下可以执行脚本的动作")]),t._v(" "),a("p",[t._v("保存前")]),t._v(" "),a("p",[t._v("保存后")]),t._v(" "),a("p",[t._v("异步（执行过程中）")])]),t._v(" "),a("h2",{attrs:{id:"_2-系统的设计与实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-系统的设计与实现"}},[t._v("#")]),t._v(" 2 系统的设计与实现")]),t._v(" "),a("p",[t._v("关系型数据库是互联网应用的重要技术，已经实践了二十几个年头了，经得起业务也经得起大数据查询速度的考验。今天我们用4张表实现元数据系统架构中持久化层，2张表实现模型的定义，2张表实现实体数据的存储。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-模型的描述表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-模型的描述表"}},[t._v("#")]),t._v(" 2.1 模型的描述表")]),t._v(" "),a("blockquote",[a("p",[t._v("根据道家法天象地思想，每一个物体都是由最基础的原子组成，根据不同的数量的聚集，空间结构表现不同的物质。本系统中不管是类还是属性都是由元数据构成的。哪些属性属于哪个类是由模型的关系表存储的。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'主键'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'元数据符号'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'备注'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("data_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据类型(String,Number,Boolean,)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("sort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'排序'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("view_resolver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'视图处理器（应对丰富的展现方法）'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_2-2-模型的关系表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-模型的关系表"}},[t._v("#")]),t._v(" 2.2 模型的关系表")]),t._v(" "),a("blockquote",[a("p",[t._v("如果没有关系，元数据就是这样一堆毫无意义的属性，电话、姓名、用户模型、银行模型、卡号……，加入关系后就变成清晰的三维结构。")]),t._v(" "),a("p",[t._v("用户模型（父模型）                          \t\t\t\t\t角色（模型）\n--- ID\t\t\t\t\t\t\t\t \t\t\t\t                     ---角色名称\t\n--- 姓名               \t\t\t\t\n银行卡模型（子模型）\n---卡号\n角色（子模型）\n--角色名称")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("description_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("description_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'描述ID'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("parent_description_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父描述ID'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-3-实体数据表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-实体数据表"}},[t._v("#")]),t._v(" 2.3 实体数据表")]),t._v(" "),a("blockquote",[a("p",[t._v("实体数据表的数据结构是描述表的映射，用来保存描述表定义的模型结构的实体数据。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'主键'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'元数据值'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("description_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'描述ID'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-数据关系表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-数据关系表"}},[t._v("#")]),t._v(" 2.4 数据关系表")]),t._v(" "),a("blockquote",[a("p",[t._v("实体数据关系表的数据结构是描述关系表的映射，用来保存实体数据关联关系。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("instance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'主键'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'实例ID'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("parent_instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父实例ID'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("instanceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("parentInstanceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("parent_instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-5-数据结构总结【图数据】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-数据结构总结【图数据】"}},[t._v("#")]),t._v(" 2.5 数据结构总结【图数据】")]),t._v(" "),a("blockquote",[a("p",[t._v("元数据的数据结构实际上是宏观的图数据结构，图数据在人工智能、大数据处理中应用广泛。一张图展示图数据结构。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/aMeta/relation.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2-6-二维数据查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-二维数据查询"}},[t._v("#")]),t._v(" 2.6 二维数据查询")]),t._v(" "),a("blockquote",[a("p",[t._v("在实际的生产中人们接触最多的就是二维数据体，比如EXCEL表，sheet是表明，表头是属性，下面是数据。这种结构易于理解。那我们如何构造SQL语句查询一条用户数据呢？")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t用户"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 用户Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t用户名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 用户名\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t\t\tinstance\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\t\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 用户\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t\tinstance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent_instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tinstance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t\tinstance_relation\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" instance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" instance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 用户名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 用户"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 用户名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent_instance_id\n")])])]),a("p",[t._v("结果：\n"),a("img",{attrs:{src:"/aMeta/data.png",alt:""}})]),t._v(" "),a("p",[t._v("上面的SQL语句是经由系统动态拼接出来的，查询子属性只需要根据描述信息 LEFT JOIN 子属性即可。")]),t._v(" "),a("h3",{attrs:{id:"_2-7-三维数据查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-三维数据查询"}},[t._v("#")]),t._v(" 2.7 三维数据查询")]),t._v(" "),a("blockquote",[a("p",[t._v("经由上面的数据查询大家伙肯定还有一个疑问，该用户下的银行卡信息是如何查询出来，能拆解成1条二维数据吗？答案是肯定的，多维数据可以拆解成1条二维数据，但是小编觉得三维数据拆解成二维数据会增加前端开发的复杂度。A-META系统被设计成根据多维深度分段查询一次返回，或前端分段查询，下面是查询子集 银行卡信息的示例：")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t银行卡"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 银行卡Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t银行卡号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 银行卡号\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t\t\tinstance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" instance_relation "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\t\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" instance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent_instance_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户ID"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 银行卡\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t\tinstance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent_instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tinstance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t\tinstance_relation\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" instance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" instance_relation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\t\tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" 银行卡号 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 银行卡"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 银行卡号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent_instance_id\n\n")])])]),a("h3",{attrs:{id:"_2-8-sql性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-sql性能"}},[t._v("#")]),t._v(" 2.8 SQL性能")]),t._v(" "),a("blockquote",[a("p",[t._v("不多说，看图，可以百分百命中索引\n"),a("img",{attrs:{src:"/aMeta/xn.png",alt:""}})])]),t._v(" "),a("h3",{attrs:{id:"_2-9-增删改查过程中可执行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-增删改查过程中可执行脚本"}},[t._v("#")]),t._v(" 2.9 增删改查过程中可执行脚本")]),t._v(" "),a("blockquote",[a("p",[t._v("A-META系统兼容复杂的业务逻辑是通过在数据执行增删改查动作时执行脚本实现的。A-META系统使用JAVA开发，脚本引擎是"),a("a",{attrs:{href:"https://baike.baidu.com/item/Groovy/180590?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("GROOVY"),a("OutboundLink")],1),t._v("。系统通过FEIGIN对外暴露增删改查API，在GROOVY脚本中可直接调用相关服务对数据进行操作，同时可以通过后台上传第三方系统的JAR包，实现调用第三方系统的组件。相关内容请查阅API文档。")])]),t._v(" "),a("h2",{attrs:{id:"_2-api手册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-api手册"}},[t._v("#")]),t._v(" 2 API手册")]),t._v(" "),a("p",[t._v("系统源码及API手册敬请期待！")])])}),[],!1,null,null,null);s.default=e.exports}}]);